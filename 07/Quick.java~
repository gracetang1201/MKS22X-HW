public class Quick{
    public static int part( int[]data, int start, int end ){

	//choose a random pivot:
	Random r = new Random();
	int pivotpos = r.nextInt(end-start) + start; //position of pivot
      	System.out.println(pivotpos + "pivotpos");
 

	//swap pivot and the first number:
	int pivotnum = data[pivotpos];
	data[pivotpos] = data[0];
	data[0] = pivotnum;
	pivotpos = 0;
	
	for(int i = 1; i < data.length; i++){
	    if(data[i] < pivotnum){
		int temp = data[i];
		data[i] = 0;;
		for(int move = i-1; move >= pivotpos; move--){
		    data[move+1] = data[move];
		}
		data[pivotpos] = temp;
		pivotpos++;
	    }
	}
	return pivotpos;
    }
    public static int quickselect(int[]data, int k){
	if(part(data, 0, data.length) != k){
	    int pivotposition = part(data, 0, data.length);
	    if (k > part(data, 0, data.length)){
		
		//partition higher array
		return quickselect(Arrays.copyOfRange(data, pivotposition, data.length));
	    }else{
		//partition lower array
		return quickselect(Arrays.copyOfRange(data, 0, pivotposition));
	    }
	}else{
	    return k;
	}
    }
}
